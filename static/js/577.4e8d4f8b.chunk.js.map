{"version":3,"file":"static/js/577.4e8d4f8b.chunk.js","mappings":"4TAEMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAA,kEAAqEF,EAArE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,uFACoBL,IAAAA,IAAA,6CAAgDK,EAAhD,oBAA8DP,EAA9D,wBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,uFACoBL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,EAAtE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKK,MAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,uFACoBL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,EAAtE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACoBV,IAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFY,EAAhF,wBADpB,cACGT,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kE,iMCrBMQ,EAAkBC,EAAAA,GAAAA,IAAH,wDAKfC,GAAoBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uNAEnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAQC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,MAAnB,IAID,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,MAAnB,IAIDC,EAAUR,EAAAA,GAAAA,IAAH,gD,SChBPS,EAAmB,WAAO,IAAD,IAC9BC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAM7C,IAJAC,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAASuB,GAASM,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAb,GAC3B,GAAE,CAACP,IAECF,EAIL,OACE,4BACE,SAAC,KAAD,CAAMU,GAAIN,EAAV,+BAEA,wBAAKJ,EAAMW,kBACX,uBAAIX,EAAMY,gBACV,UAAC1B,EAAD,YACE,0BACE,gBACE2B,IAAG,yCAAoCb,EAAMc,aAC7CC,IAAI,OACJC,MAAM,aAIV,4BACE,oCACA,wBACGhB,EAAMiB,QACLjB,EAAMiB,OAAOC,KAAI,SAAAC,GACf,OACE,yBACE,uBAAIA,EAAKC,QADFD,EAAKvC,GAIjB,OAEL,sCACA,uBAAIoB,EAAMqB,kBAId,UAAC1B,EAAD,YACE,SAACP,EAAD,CAAmBsB,GAAG,OAAOL,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAA3D,mBAGA,SAAClB,EAAD,CAAmBsB,GAAG,UAAUL,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAA9D,yBAIF,SAAC,EAAAgB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,EAED,G","sources":["components/helpers/getMovies.js","components/page/MovieDetailsPage.styled.jsx","components/page/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '6bfe9e7136eb9b0c49a32900d57df98b';\n\nexport async function trendingMovies() {\n    const responce = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.results;\n}\n\nexport async function getMovie(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data;\n}\n\nexport async function getCast(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.cast;\n}\n\nexport async function getReviews(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.results;\n}\n\nexport async function searhMovies(query) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&language=en`);\n    return responce.data.results;\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsDiv = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const LinkMoviesDetails = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: 500;\n\n  :not(:last-child) {\n    margin-right: 20px;\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const LinkDiv = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { getMovie } from 'components/helpers/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport {\n  MovieDetailsDiv,\n  LinkMoviesDetails,\n  LinkDiv,\n} from './MovieDetailsPage.styled';\n\nexport const MovieDetailsPage = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovie(movieId).then(res => setMovie(res));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <div>\n      <Link to={backLinkHref}>Back to products</Link>\n\n      <h1>{movie.original_title}</h1>\n      <p>{movie.release_date}</p>\n      <MovieDetailsDiv>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt=\"Film\"\n            width=\"300px\"\n          />\n        </div>\n\n        <div>\n          <h2>Genres</h2>\n          <ul>\n            {movie.genres &&\n              movie.genres.map(genr => {\n                return (\n                  <li key={genr.id}>\n                    <p>{genr.name}</p>\n                  </li>\n                );\n              })}\n          </ul>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n        </div>\n      </MovieDetailsDiv>\n\n      <LinkDiv>\n        <LinkMoviesDetails to=\"cast\" state={{ from: location.state.from }}>\n          Cast\n        </LinkMoviesDetails>\n        <LinkMoviesDetails to=\"reviews\" state={{ from: location.state.from }}>\n          Reviews\n        </LinkMoviesDetails>\n      </LinkDiv>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["API_KEY","trendingMovies","axios","responce","data","results","getMovie","id","getCast","cast","getReviews","searhMovies","query","MovieDetailsDiv","styled","LinkMoviesDetails","NavLink","p","theme","colors","black","accent","LinkDiv","MovieDetailsPage","location","useLocation","useState","movie","setMovie","movieId","useParams","backLinkHref","state","from","useEffect","then","res","to","original_title","release_date","src","poster_path","alt","width","genres","map","genr","name","overview","Suspense","fallback","Loader"],"sourceRoot":""}