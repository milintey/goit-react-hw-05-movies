{"version":3,"file":"static/js/817.06b10079.chunk.js","mappings":"6MAGaA,EAAcC,EAAAA,GAAAA,GAAH,4EAMXC,EAAcD,EAAAA,GAAAA,GAAH,yCAIXE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oFAEX,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,I,SCdHC,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,SAACb,EAAD,UACGY,EAAOE,KAAI,SAAAC,GACV,OACE,yBACE,UAACZ,EAAD,CAAWa,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMN,GAArD,WACE,gBACEO,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAI,OACJC,MAAM,WAER,SAACrB,EAAD,UAAca,EAAMS,qBAPfT,EAAME,GAWlB,KAGN,C,4MCnBKQ,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAA,kEAAqEF,EAArE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBd,GAAxB,uFACoBU,IAAAA,IAAA,6CAAgDV,EAAhD,oBAA8DQ,EAA9D,wBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAuBf,GAAvB,uFACoBU,IAAAA,IAAA,6CAAgDV,EAAhD,4BAAsEQ,EAAtE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKI,MAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BjB,GAA1B,uFACoBU,IAAAA,IAAA,6CAAgDV,EAAhD,4BAAsEQ,EAAtE,wBADpB,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACoBT,IAAAA,IAAA,4DAA+DF,EAA/D,kBAAgFW,EAAhF,wBADpB,cACGR,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kE,8ICnBMO,EAAa,WAAO,IAAD,EAC9B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAO1B,EAAP,KAAe4B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAC1ChC,GAAWiC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVX,IAGJD,EAAAA,EAAAA,IAAYC,GACTY,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACf,IAYJ,OACE,4BACE,kBAAMkB,SAPS,SAAAC,GACjBA,EAAMC,iBACNjB,EAASgB,EAAME,cAAcC,SAAStB,MAAMuB,MAC7C,EAIG,WACE,kBACEC,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZL,MAAOf,EACPqB,SAAU,SAAAC,GAAC,OApBON,EAoBeM,EAAEC,OAAOR,WAlBhDhB,EAD4B,KAATiB,EAAc,CAAEA,KAAAA,GAAS,CAAC,GADrB,IAAAA,CAoBP,KAGb,mBAAQC,KAAK,SAAb,UACE,2CAIJ,yBAAMjD,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQC,SAAUA,QAsB3D,EAED,W","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/helpers/getMovies.js","components/page/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const MoviesTitle = styled.h2`\n  width: 200px;\n`;\n\nexport const LinkMovie = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import { MovieListUl, MoviesTitle, LinkMovie } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <MovieListUl>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <LinkMovie to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt=\"Film\"\n                width=\"200px\"\n              />\n              <MoviesTitle>{movie.original_title}</MoviesTitle>\n            </LinkMovie>\n          </li>\n        );\n      })}\n    </MovieListUl>\n  );\n};\n","import axios from \"axios\";\n\nconst API_KEY = '6bfe9e7136eb9b0c49a32900d57df98b';\n\nexport async function trendingMovies() {\n    const responce = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.results;\n}\n\nexport async function getMovie(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data;\n}\n\nexport async function getCast(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.cast;\n}\n\nexport async function getReviews(id) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en`);\n    return responce.data.results;\n}\n\nexport async function searhMovies(query) {\n    const responce = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&language=en`);\n    return responce.data.results;\n}","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searhMovies } from 'components/helpers/getMovies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const productName = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    searhMovies(query)\n      .then(res => setMovies(res))\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    setQuery(event.currentTarget.elements.query.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={formSubmit}>\n        <input\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={productName}\n          onChange={e => updateQueryString(e.target.value)}\n        />\n\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      <div>{movies && <MoviesList movies={movies} location={location} />}</div>\n\n      {/* {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt=\"Film\"\n                    width=\"200px\"\n                  />\n                  <h2>{movie.original_title}</h2>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )} */}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MovieListUl","styled","MoviesTitle","LinkMovie","Link","p","theme","colors","black","fontSizes","m","MoviesList","movies","location","map","movie","to","id","state","from","src","poster_path","alt","width","original_title","API_KEY","trendingMovies","axios","responce","data","results","getMovie","getCast","cast","getReviews","searhMovies","query","MoviesPage","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","productName","get","useLocation","useEffect","then","res","catch","error","console","log","onSubmit","event","preventDefault","currentTarget","elements","value","name","type","autoComplete","autoFocus","placeholder","onChange","e","target"],"sourceRoot":""}